= render :partial => 'shared/header_vote'
.votebox
  %table.full
    %tr
      %td{:colspan => 3}
        = rounded(@question, 'border')
    %tr.prompt
      %td.half.idea.left= rounded(render(:partial => 'idea', :locals => {:data => @item_data[0], :id => @item_ids[0]}), 'round-filled')
      %td
      %td.idea.right= rounded(render(:partial => 'idea', :locals => {:data => @item_data[1], :id => @item_ids[1]}), 'round-filled')
  %table.vote-footer
    %tr
      %td= link_to(t('nav.feedback'), quick_link('vote/feedback', feedback_vote_path(:question_id => @question_id)))
      %td= link_to(t('vote.skip'), new_vote_path(vote_params))
      %td== #{@votes_count} #{t('common.votes_on')} #{@items_count} #{t('common.ideas')}
  .clear
  %center
    = render :partial => 'items/form'
    %br
    %p
      &nbsp;
      -if @winner
        -if @skip
          == #{t('vote.you_skipped_both')} #{link_to(@winner, item_path(@winner_id, :question_id => @question_id))} #{t('common.and')} #{link_to(@loser, item_path(@loser_id, :question_id => @question_id))}
        -else
          == #{t('vote.you_chose')} #{link_to(@winner, item_path(@winner_id, :question_id => @question_id))} #{t('vote.over')} #{link_to(@loser, item_path(@loser_id, :question_id => @question_id))}.
      -elsif flash[:v_notice]
        %p.vote-notice#v_notice= flash[:v_notice]
        = javascript_tag "setTimeout(function() { $('#v_notice').fadeOut(1000); }, 3000);"
      -elsif flash[:v_error]
        %p.error#v_error= flash[:v_error]
        = javascript_tag "setTimeout(function() { $('#v_error').fadeOut(1000); }, 3000);"
      %p.error#length_error{:style => "display:none"}== #{t('items.new.too_long')} #{Const::MAX_ITEM_LENGTH} #{t('common.characters')}.